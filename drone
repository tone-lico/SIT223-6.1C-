stage('Build') {
    steps {
        echo 'Building...'
        sh 'mvn clean package'
    }
}

stage('Test') {
    steps {
        echo 'Running tests...'
        sh 'mvn test'
    }
}

stage('Code Analysis') {
    steps {
        echo 'Analyzing code...'
        // Assuming SonarQube is configured
        sh 'mvn sonar:sonar'
    }
}

stage('Security Scan') {
    steps {
        echo 'Running security scan...'
        // Assuming OWASP Dependency Check is set up
        sh 'dependency-check.sh --project MyProject'
    }
}

stage('Deploy to Staging') {
    steps {
        echo 'Deploying to Staging...'
        // Example AWS CLI command
        sh 'aws s3 cp target/myapp.jar s3://my-staging-bucket/'
    }
}

stage('Integration Tests on Staging') {
    steps {
        echo 'Running integration tests on staging...'
        // Assuming Selenium tests are configured
        sh 'mvn verify'
    }
}

stage('Deploy to Production') {
    steps {
        echo 'Deploying to Production...'
        // Example AWS CLI command
        sh 'aws s3 cp target/myapp.jar s3://my-production-bucket/'
    }
}

post {
    success {
        mail to: 'youremail@example.com',
             subject: "Pipeline successful: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
             body: "Pipeline '${env.JOB_NAME}' (${env.BUILD_URL}) succeeded."
    }
    failure {
        mail to: 'youremail@example.com',
             subject: "Pipeline failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
             body: "Pipeline '${env.JOB_NAME}' (${env.BUILD_URL}) failed."
    }
}
